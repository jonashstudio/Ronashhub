-- ðŸŒ€ Load WindUI safely
local success, WindUI = pcall(function()
    return loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/refs/heads/main/Example.lua"))()
end)

if not success then
    warn("Failed to load WindUI")
    return
end

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local hrp = character:WaitForChild("HumanoidRootPart")
local UserInput = game:GetService("UserInputService")

-- ðŸŒŸ Create main window (mobile-friendly)
local Window = WindUI:Window({
    Name = "âš¡ Ronash Hub",
    Size = UDim2.new(0.95, 0, 0.85, 0), -- almost full screen
    Theme = "Dark",
})

-- ðŸ–² Pages
local StatusPage = Window:Page({Name = "Status"})
local AntiAFKPage = Window:Page({Name = "Anti-AFK"})

-- âš¡ Add Stat Sliders
local function addStatSlider(page, label, default, min, max, applyFunc)
    page:Slider({
        Name = label,
        Min = min,
        Max = max,
        Default = default,
        Callback = applyFunc
    })
end

addStatSlider(StatusPage, "Speed", 16, 0, 500, function(v) humanoid.WalkSpeed = v end)
addStatSlider(StatusPage, "Jump", 50, 0, 500, function(v) humanoid.JumpPower = v end)
addStatSlider(StatusPage, "Gravity", 196, 0, 500, function(v) workspace.Gravity = v end)
local flySpeed = 50
addStatSlider(StatusPage, "Fly Speed", 50, 0, 500, function(v) flySpeed = v end)

-- Fly toggle
local flying = false
local bodyVel
local flyConn
StatusPage:Button({
    Name = "Toggle Fly",
    Callback = function()
        flying = not flying
        if flying then
            bodyVel = Instance.new("BodyVelocity")
            bodyVel.MaxForce = Vector3.new(4000,4000,4000)
            bodyVel.Velocity = Vector3.zero
            bodyVel.Parent = hrp

            flyConn = game:GetService("RunService").RenderStepped:Connect(function()
                if flying and hrp then
                    local moveDir = Vector3.zero
                    if UserInput:IsKeyDown(Enum.KeyCode.W) then moveDir += workspace.CurrentCamera.CFrame.LookVector end
                    if UserInput:IsKeyDown(Enum.KeyCode.S) then moveDir -= workspace.CurrentCamera.CFrame.LookVector end
                    if UserInput:IsKeyDown(Enum.KeyCode.A) then moveDir -= workspace.CurrentCamera.CFrame.RightVector end
                    if UserInput:IsKeyDown(Enum.KeyCode.D) then moveDir += workspace.CurrentCamera.CFrame.RightVector end
                    if UserInput:IsKeyDown(Enum.KeyCode.Space) then moveDir += Vector3.new(0,1,0) end
                    if UserInput:IsKeyDown(Enum.KeyCode.LeftShift) then moveDir -= Vector3.new(0,1,0) end
                    bodyVel.Velocity = moveDir * flySpeed
                else
                    bodyVel.Velocity = Vector3.zero
                end
            end)
        else
            if bodyVel then bodyVel:Destroy() end
            if flyConn then flyConn:Disconnect() end
        end
    end
})

-- ðŸ’¤ Anti-AFK
local antiAFKEnabled = false
local conn
AntiAFKPage:Button({
    Name = "Toggle Anti-AFK",
    Callback = function()
        antiAFKEnabled = not antiAFKEnabled
        if antiAFKEnabled then
            if not conn then
                conn = player.Idled:Connect(function()
                    game:GetService("VirtualUser"):CaptureController()
                    game:GetService("VirtualUser"):ClickButton2(Vector2.new())
                end)
            end
            AntiAFKPage:Notification({Title="Anti-AFK", Text="ON"})
        else
            if conn then conn:Disconnect() conn = nil end
            AntiAFKPage:Notification({Title="Anti-AFK", Text="OFF"})
        end
    end
})

-- ðŸ”˜ Mobile Floating Button
local openBtn = Instance.new("TextButton")
openBtn.Size = UDim2.new(0, 80, 0, 80)
openBtn.Position = UDim2.new(0.85, 0, 0.85, 0)
openBtn.Text = "Ronash"
openBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
openBtn.TextColor3 = Color3.new(1,1,1)
openBtn.Font = Enum.Font.GothamBold
openBtn.TextSize = 16
openBtn.Parent = player:WaitForChild("PlayerGui")
openBtn.Visible = false
openBtn.Active = true
openBtn.Draggable = true
openBtn.AutoButtonColor = false

local openCorner = Instance.new("UICorner")
openCorner.CornerRadius = UDim.new(1,0)
openCorner.Parent = openBtn

-- Pulse animation
spawn(function()
    local increasing = true
    while true do
        if openBtn.Visible then
            local scale = openBtn.Size.X.Offset / 80
            if increasing then
                scale = math.min(scale + 0.015, 1.3)
                if scale >= 1.3 then increasing = false end
            else
                scale = math.max(scale - 0.015, 1)
                if scale <= 1 then increasing = true end
            end
            openBtn.Size = UDim2.new(0, 80*scale, 0, 80*scale)
        end
        wait(0.03)
    end
end)

-- Hover effect
openBtn.MouseEnter:Connect(function()
    openBtn.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
end)
openBtn.MouseLeave:Connect(function()
    openBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
end)

-- Open Window on tap
openBtn.MouseButton1Click:Connect(function()
    Window:Show()
    openBtn.Visible = false
end)

-- Show button when window is closed
Window:CloseCallback(function()
    openBtn.Visible = true
end)

-- Show Window by default
Window:Show()
