--=====================================================
-- RONASH HUB X2ZU UI - FULL EDITION (with Anti-AFK)
--=====================================================

-- Load UI Library
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/x2zu/OPEN-SOURCE-UI-ROBLOX/refs/heads/main/X2ZU%20UI%20ROBLOX%20OPEN%20SOURCE/DummyUi-leak-by-x2zu/fetching-main/Tools/Framework.luau"))()

-- Create Main Window
local Window = Library:Window({
    Title = "Ronash Hub [ X2ZU ]",
    Desc = "Ronash on top",
    Icon = 105059922903197,
    Theme = "Dark",
    Config = {
        Keybind = Enum.KeyCode.LeftControl,
        Size = UDim2.new(0, 500, 0, 400)
    },
    CloseUIButton = {
        Enabled = true,
        Text = "Ronash"
    }
})

--========================================
-- Welcome Notification
--========================================
Window:Notify({
    Title = "Ronash Hub",
    Desc = "Welcome to Ronash Hub!",
    Time = 5
})

--========================================
-- Tab: Movement (Speed, Jump, Gravity, Infinite Jump)
--========================================
local MovementTab = Window:Tab({Title = "Movement", Icon = "zap"}) do
    local Players = game:GetService("Players")
    local lp = Players.LocalPlayer
    local humanoid = lp.Character and lp.Character:FindFirstChildOfClass("Humanoid")

    -- Speed
    MovementTab:Toggle({
        Title = "Speed Hack",
        Value = false,
        Callback = function(v)
            if humanoid then
                humanoid.WalkSpeed = v and 50 or 16
            end
        end
    })

    -- Jump
    MovementTab:Toggle({
        Title = "High Jump",
        Value = false,
        Callback = function(v)
            if humanoid then
                humanoid.JumpPower = v and 150 or 50
            end
        end
    })

    -- Gravity
    MovementTab:Toggle({
        Title = "Low Gravity",
        Value = false,
        Callback = function(v)
            workspace.Gravity = v and 50 or 196.2
        end
    })

    -- Infinite Jump
    MovementTab:Toggle({
        Title = "Infinite Jump",
        Value = false,
        Callback = function(v)
            getgenv().InfJump = v
        end
    })

    game:GetService("UserInputService").JumpRequest:Connect(function()
        if getgenv().InfJump and humanoid then
            humanoid:ChangeState("Jumping")
        end
    end)
end

--========================================
-- Tab: ESP
--========================================
local ESPTab = Window:Tab({Title = "ESP", Icon = "eye"}) do
    local function applyESP(player)
        if player.Character then
            if not player.Character:FindFirstChild("ESPHighlight") then
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESPHighlight"
                highlight.FillColor = Color3.fromRGB(0, 255, 0)
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.Parent = player.Character
            end
        end
    end

    ESPTab:Toggle({
        Title = "Enable ESP",
        Value = false,
        Callback = function(v)
            if v then
                for _, plr in pairs(game.Players:GetPlayers()) do
                    if plr ~= game.Players.LocalPlayer then
                        applyESP(plr)
                    end
                end
                game.Players.PlayerAdded:Connect(applyESP)
            else
                for _, plr in pairs(game.Players:GetPlayers()) do
                    if plr.Character then
                        local esp = plr.Character:FindFirstChild("ESPHighlight")
                        if esp then esp:Destroy() end
                    end
                end
            end
        end
    })
end

--========================================
-- Tab: Spectate
--========================================
local SpectateTab = Window:Tab({Title = "Spectate", Icon = "camera"}) do
    local function startSpectate(targetPlayer)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
            workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        end
    end

    local function stopSpectate()
        workspace.CurrentCamera.CameraSubject = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    end

    SpectateTab:Textbox({
        Title = "Player Name",
        Placeholder = "Enter player name",
        Callback = function(name)
            local plr = game.Players:FindFirstChild(name)
            if plr then startSpectate(plr) end
        end
    })

    SpectateTab:Button({
        Title = "Stop Spectating",
        Callback = stopSpectate
    })
end

--========================================
-- Tab: Freeze
--========================================
local FreezeTab = Window:Tab({Title = "Freeze", Icon = "snowflake"}) do
    local function freezePlayer(targetPlayer)
        if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            targetPlayer.Character.HumanoidRootPart.Anchored = true
        end
    end

    local function unfreezePlayer(targetPlayer)
        if targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            targetPlayer.Character.HumanoidRootPart.Anchored = false
        end
    end

    FreezeTab:Textbox({
        Title = "Freeze Player",
        Placeholder = "Enter player name",
        Callback = function(name)
            local plr = game.Players:FindFirstChild(name)
            if plr then freezePlayer(plr) end
        end
    })

    FreezeTab:Textbox({
        Title = "Unfreeze Player",
        Placeholder = "Enter player name",
        Callback = function(name)
            local plr = game.Players:FindFirstChild(name)
            if plr then unfreezePlayer(plr) end
        end
    })
end

--========================================
-- Tab: Anti-AFK
--========================================
local AntiAFKTab = Window:Tab({Title = "Anti-AFK", Icon = "shield"}) do
    AntiAFKTab:Toggle({
        Title = "Enable Anti-AFK",
        Value = true,
        Callback = function(v)
            if v then
                local vu = game:GetService("VirtualUser")
                game:GetService("Players").LocalPlayer.Idled:Connect(function()
                    vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                    task.wait(1)
                    vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
                end)
                Window:Notify({
                    Title = "Anti-AFK",
                    Desc = "Anti-AFK is now enabled!",
                    Time = 3
                })
            end
        end
    })
end

--========================================
-- Tab: Status
--========================================
local StatusTab = Window:Tab({Title="Status", Icon="info"}) do
    StatusTab:Section({Title="Script Status"})
    local ScriptStatus = "UP âœ…"
    StatusTab:Label({
        Title = "Hub Status: "..ScriptStatus,
        Desc = "Check here to see if script is working"
    })
    local executorName = (identifyexecutor and identifyexecutor()) or "Unknown"
    StatusTab:Label({
        Title = "Executor: "..executorName,
        Desc = "Your current executor"
    })
end

--========================================
-- Tab: Discord
--========================================
local DiscordTab = Window:Tab({Title="Discord", Icon="users"}) do
    DiscordTab:Label({
        Title = "Join the Ronash Hub Discord!",
        Desc = "discord.gg/nBMb3dh7"
    })
end

--========================================
-- Final Notification
--========================================
Window:Notify({
    Title = "Ronash Hub",
    Desc = "All features loaded successfully!",
    Time = 5
})

